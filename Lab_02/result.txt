goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ nano app.py
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ python3 app.py
Hello, World!
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ cat > Dockerfile
FROM python:3

COPY app.py /    

RUN pip install flask

CMD ["python", "./app.py" ]                                 
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ sudo docker build -t myapp .
[+] Building 13.9s (8/8) FINISHED                                               
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 118B                                       0.0s
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 2B                                            0.0s
 => [internal] load metadata for docker.io/library/python:3                1.7s
 => [internal] load build context                                          0.0s
 => => transferring context: 56B                                           0.0s
 => [1/3] FROM docker.io/library/python:3@sha256:1db68f83ca0d2735aeb80470  9.2s
 => => resolve docker.io/library/python:3@sha256:1db68f83ca0d2735aeb80470  0.0s
 => => sha256:1db68f83ca0d2735aeb804708cbc2b7be573ff4c236 2.14kB / 2.14kB  0.0s
 => => sha256:f776eb0acc768c0227cd336e33a97f3054101cf35ee 2.22kB / 2.22kB  0.0s
 => => sha256:32fb02163b6bb519a30f909008e852354dae10bdf 55.05MB / 55.05MB  2.1s
 => => sha256:a8405b7e74cfd825621793b3448c3786d578dc2df4a 8.92kB / 8.92kB  0.0s
 => => sha256:167c7feebee855d117e192389484ea8367be1ba84e7 5.17MB / 5.17MB  1.4s
 => => sha256:d6dfff1f6f3ddd2194ea0775f199572e8b2d75c38 10.88MB / 10.88MB  0.4s
 => => sha256:e9cdcd4942ebc7445d8a70117a83ecbc77dcc5ffc 54.59MB / 54.59MB  2.2s
 => => sha256:ca3bce705f6c47c25b6e7896b4da514bf271c58 196.81MB / 196.81MB  6.9s
 => => sha256:5e1c6c4f8bbf1116f692204567222e5b77b4d0275cc 6.29MB / 6.29MB  2.5s
 => => extracting sha256:32fb02163b6bb519a30f909008e852354dae10bdfd6b3419  0.5s
 => => sha256:2da42ff3382c8728675ad6da038dd6c40010bb577 20.05MB / 20.05MB  2.9s
 => => sha256:86f9457966ab88b64b3db60c24031e3ad58b40db377586e 234B / 234B  2.7s
 => => extracting sha256:167c7feebee855d117e192389484ea8367be1ba84e7ee35f  0.1s
 => => sha256:896264e2a03c08702fd443b414c8d2da9fbe71f5e05 3.06MB / 3.06MB  2.9s
 => => extracting sha256:d6dfff1f6f3ddd2194ea0775f199572e8b2d75c38713eef0  0.1s
 => => extracting sha256:e9cdcd4942ebc7445d8a70117a83ecbc77dcc5ffc72c4b6f  0.6s
 => => extracting sha256:ca3bce705f6c47c25b6e7896b4da514bf271c5827b1d19f5  1.7s
 => => extracting sha256:5e1c6c4f8bbf1116f692204567222e5b77b4d0275cccad0c  0.1s
 => => extracting sha256:2da42ff3382c8728675ad6da038dd6c40010bb5775c485a5  0.2s
 => => extracting sha256:86f9457966ab88b64b3db60c24031e3ad58b40db377586e0  0.0s
 => => extracting sha256:896264e2a03c08702fd443b414c8d2da9fbe71f5e051bf3e  0.1s
 => [2/3] COPY app.py /                                                    0.4s
 => [3/3] RUN pip install flask                                            2.3s
 => exporting to image                                                     0.1s
 => => exporting layers                                                    0.1s
 => => writing image sha256:ad4e2fdcbe5b1317f87f3128c67ce9c9667042fb40a96  0.0s
 => => naming to docker.io/library/myapp                                   0.0s
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ sudo docker run myapp
Hello, World!
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ sudo docker container ls -a
CONTAINER ID   IMAGE                        COMMAND             CREATED              STATUS                          PORTS     NAMES
e4cd0b81136b   myapp                        "python ./app.py"   About a minute ago   Exited (0) About a minute ago             xenodochial_euclid
ac781bad538a   ellerbrock/alpine-bash-git   "/bin/bash"         7 days ago           Exited (0) 7 days ago                     lab_01
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ sudo docker rm e4cd0b81136b
e4cd0b81136b
goblin@goblin-MS-7B87:~/git/TCS/Lab_02$ sudo docker container ls -a
CONTAINER ID   IMAGE                        COMMAND       CREATED      STATUS                  PORTS     NAMES
ac781bad538a   ellerbrock/alpine-bash-git   "/bin/bash"   7 days ago   Exited (0) 7 days ago             lab_01










goblin@goblin-MS-7B87:~/git/TCS/Lab_02/docx$ sudo docker build -t lab_reader .
[+] Building 4.6s (9/9) FINISHED                                                
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 167B                                       0.0s
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 2B                                            0.0s
 => [internal] load metadata for docker.io/library/python:3                0.5s
 => [1/4] FROM docker.io/library/python:3@sha256:1db68f83ca0d2735aeb80470  0.0s
 => [internal] load build context                                          0.0s
 => => transferring context: 70B                                           0.0s
 => CACHED [2/4] COPY readDOCX.py /                                        0.0s
 => CACHED [3/4] COPY DockerBasics.docx /                                  0.0s
 => [4/4] RUN pip install flask python-docx                                3.9s
 => exporting to image                                                     0.2s 
 => => exporting layers                                                    0.2s 
 => => writing image sha256:9ae5ba6b7453bc5444a2b97eda4db4beda60c0233e2ba  0.0s 
 => => naming to docker.io/library/lab_reader                              0.0s 
goblin@goblin-MS-7B87:~/git/TCS/Lab_02/docx$ sudo docker run lab_reader
Лабораторна робота №2. Створення Docker контейнера для запуску додатку.

Мета: ознайомитися з Docker та створенням власних Docker контейнерів, написати Dockerfile для збирання контейнера з додатком, запустити додаток у Docker контейнері.

Завдання

Створіть у робочому репозиторії каталог Lab_02. Усі наступні завдання необхідно виконувати у цьому каталозі.
Напишіть додаток, який буде запускатися з терміналу та виводити "Hello, World!" у консоль. Збережіть код у файлі з назвою "app.py".
Створіть файл з назвою "Dockerfile". Додайте у файл наступний вміст:

Цей Dockerfile означає, що ми будемо використовувати базовий образ Python версії 3, копіювати файл "app.py" в кореневу директорію контейнера, встановлювати бібліотеку Flask та запускати додаток командою "python ./app.py".
Відкрийте термінал та перейдіть до кореневої директорії проекту. Введіть наступну команду для збірки контейнера:

$> docker build -t myapp .

Запустіть Docker контейнер, використовуючи наступну команду:

$> docker run myapp

Зупиніть та видаліть створений контейнер.
На вибраній мові програмування напишіть програму, яка зчитує текст цієї лабораторної роботи із файлу і виводить його у термінал.
Створіть Dockerfile для запуску цієї програми у контейнері.
Зберіть та запустіть створений контейнер.
 Закомітьте усі створені файли та відправте зміни на GitHub.
